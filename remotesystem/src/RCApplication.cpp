#include "RCApplication.h"
#include "debug.h"
#include <sstream>
using namespace std;

RCApplication* RCApplication::thisPtr = NULL;

RCApplication::RCApplication(int sd, MYSQL* database) :
	CRemoteClient(sd, database)
{
	// Command list for gateway remote client
	cmdList = new Command_t[4]
	{
		{"ADD"		, addCb},
		{"MOD"		, modifyCb},
		{"CONSULT"	, consultCb},
		{0,0}
	};

	// update parser comand list
	cmdParser.setCmdList(cmdList);

	// update remote client type
	info.type = ClientType::APPLICATION;
	DEBUG_MSG("[RCApplication] New APPLICATION client");

	thisPtr = this;
}


// // operator: ID, name, password
// query << "INSERT INTO operator VALUES(";
// query << operator_id << ",";
// query << name << ",";
// query << password << ",";

int RCApplication::addCb(int argc, char *argv[])
{
	/*
	This command must perform:
	- (MAY) Add a new region - post_code, operatorID, parish, county, district
	- Add a new location - (ID) latitude, longitude, post_code, street_name
	- Add a new lamppost - (locationID) address, status
	- Create a parking_space (locationID)
	*/
	if(argc != 10)
	{
		DEBUG_MSG("[RCApplication::addCb] Usage: ADD;<operator_id>;<addr><street_name> <post_code> <parish> <county> <district> <latitude> <longitude>");
		return -1; 
	}

	// improve readability
	int operator_id = atoi(argv[1]);
	int address = atoi(argv[2]);
	const string street_name= string("'") + argv[3] + string("'");
	const string post_code 	= string("'") + argv[4] + string("'");
	const string parish 	= string("'") + argv[5] + string("'");
	const string county 	= string("'") + argv[6] + string("'");
	const string district 	= string("'") + argv[7] + string("'");
	double latitude = atof(argv[8]);
	double longitude = atof(argv[9]);
	// string query
	stringstream query;

	// check if region already exists
	// ...

	// start transaction
	mysql_query(thisPtr->db, "START TRANSACTION");

	// INSERT new region: post_code, operatorID, parish, county, district
	query << "INSERT INTO region VALUES(";
	query << post_code << ",";
	query << operator_id << ",";
	query << parish << ",";
	query << county << ",";
	query << district << ")";

	// execute query
	DEBUG_MSG("[RCGateway::addCb] " << query.str());
	if(mysql_query(thisPtr->db, query.str().c_str()) != 0)
	{
		mysql_query(thisPtr->db, "ROLLBACK");
		DEBUG_MSG("[RCGateway::addCb] Invalid operator_id(" << operator_id << ") or post_code(" << post_code << ")");	
		return -1;
	}

	// clear query
	query.str("");
	// INSERT location: id, latitude, longitude, post_code, street_name
	query << "INSERT INTO location VALUES(";
	query << "NULL" << ","; // autoincrement location ID
	query << latitude << ",";
	query << longitude << ",";
	query << post_code << ",";
	query << street_name << ")";

	// execute query
	DEBUG_MSG("[RCGateway::addCb] " << query.str());
	if(mysql_query(thisPtr->db, query.str().c_str()) != 0)
	{
		mysql_query(thisPtr->db, "ROLLBACK");
		DEBUG_MSG("[RCGateway::addCb] Insert location: latitude("<< latitude << "), longitude(" << longitude << ") exists");	
		return -1;
	}

	// retrieve location ID which is generated by an AUTO_INCREMENT;
	int locationID = mysql_insert_id(thisPtr->db);
	string status = "'OFF'";
	// clear query
	query.str("");
	// INSERT lamppost: locationID, address, status
	query << "INSERT INTO lamppost VALUES(";
	query << locationID << ",";
	query << address << ",";
	query << status << ")";

	// execute query
	DEBUG_MSG("[RCGateway::addCb] " << query.str());
	if(mysql_query(thisPtr->db, query.str().c_str()) != 0)
	{
		mysql_query(thisPtr->db, "ROLLBACK");
		DEBUG_MSG("[RCGateway::addCb] Invalid locationID(" << locationID << "), address("<< address << ") or status(" << status << ")");	
		return -1;
	}

	// clear query
	query.str("");
	// INSERT parking_space: lamppostID, num_vacants
	query << "INSERT INTO parking_space VALUES(";
	query << locationID << ",";
	query << "0" << ")"; // num vacants default = 0

	// execute query
	DEBUG_MSG("[RCGateway::addCb] " << query.str());
	if(mysql_query(thisPtr->db, query.str().c_str()) != 0)
	{
		mysql_query(thisPtr->db, "ROLLBACK");
		DEBUG_MSG("[RCGateway::addCb] Insert parking_space: " << mysql_error(thisPtr->db));	
		return -1;
	}

	mysql_query(thisPtr->db, "COMMIT");
	DEBUG_MSG("[RCGateway::addCb] Commit in database");

	return 0;
}

int RCApplication::modifyCb(int argc, char *argv[])
{

	return 0;
}

int RCApplication::consultCb(int argc, char *argv[])
{

	return 0;
}
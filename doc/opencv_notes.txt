OpenCV

TargetPackages 
	-> Libraries 
		-> Graphics -> opencv3 
			ffmpeg support
			jpeg support
			png support
			v4l support
		-> hardware handling -> libv4l

	-> Audio and video applications
		v4l2grab                                                       
		v4l2loopback    
    		v4l2loopback-> utils 
    		
Depois de gerar o opencv no makemenuconfig:
	Ir a /output/build/opencv3-3.4.13/buildroot-build: fazer $ cmake-gui, "configure" e ativar os packages necessários (imgproc, videoio, etc). No final "Generate". Sair
	$ cmake .
	$ make -j8 (8 - number of CPU cores)
	$ sudo make install

NOTA:
	no caso de ter instalado o opencv no host machine, deve fazer $ sudo apt remove libopencv-dev

------------------------------

Target packages -> Hardware Handling -> Firmware -> rpi-firmware

Target packages → Audio and video applications -> ffmpeg

Target packages -> Hardware Handling -> rpi-userland

System configuration -> /dev management -> Dynamic using devtmpfs + eudev

Target packages -> Hardware Handling -> eudev

Target packages -> Libraries -> Hardware handling -> libv4l

Target packages -> Libraries -> Hardware handling -> bcm2835

Target packages → Libraries → Graphics -> jpeg support

Target packages → Audio and video applications -> v4l2grab 

Target packages → Audio and video applications -> gstreamer 1.x

Target packages → Audio and video applications → gst1-plugins-bad -> camerabin2

Target packages → Audio and video applications → gst1-plugins-bad -> v4lcodecs

Na pasta do buildroot:
	$ make clean
	$ make
	$ sudo dd bs=.........
	-> vais ao cartao de memoria, tem la um ficheiro que se chama config.txt (se nao for exatamente isto é bue parecido e não ha mais nenhum parecido)
	-> abres o ficheiro, vai ter la umas cenas escritas. No final acrescentas:
			start_x=1             # essential
			gpu_mem=128

	-> pronto para passar para a rasp
	fazes # modprobe bcm2835-v4l2
	Detetar a camera -> # vcgencmd get_camera (para estar bem tem de ser "supported=1 detected=1", com a camera inserida claro)
	# v4l2-ctl -d /dev/video0 --get-parm 		-> diz-nos os frames suportados pela camera
	# v4l2-ctl -d /dev/video0 -list-formats-ex 	-> diz-nos alguns parametros da camera
	# ffmpeg -f video4linux2 -s 1280x720 -input_format mjpeg -i /dev/video0 -vframes 1 test.jpg
